// <auto-generated />
using System;
using ILG_Global.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ILG_Global.DataAccess.Migrations
{
    [DbContext(typeof(ILG_GlobalContext))]
    [Migration("20211110121652_OurServicesTableAdded")]
    partial class OurServicesTableAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.HtmlContentDetail", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HtmlContentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageCode", "HtmlContentID");

                    b.HasIndex("HtmlContentID");

                    b.ToTable("HtmlContentDetails");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.HtmlContentMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanBeDeletedByUser")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("HtmlContentMasters");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.ImageDetail", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ImageID")
                        .HasColumnType("int");

                    b.Property<string>("AlternateText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageCode", "ImageID");

                    b.HasIndex("ImageID");

                    b.ToTable("ImageDetails");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.ImageMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int?>("HtmlContentMasterID")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<int?>("OurServiceMasterID")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("HtmlContentMasterID");

                    b.ToTable("ImageMasters");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.Language", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.OurServiceDetail", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OurServiceID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageCode", "OurServiceID");

                    b.HasIndex("OurServiceID");

                    b.ToTable("OurServiceDetails");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.OurServiceMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("OurServiceMasters");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.SucessStoryDetail", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SucessStoryID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageCode", "SucessStoryID");

                    b.HasIndex("SucessStoryID");

                    b.ToTable("SucessStoryDetails");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.SucessStoryMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SucessStoryMasters");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.HtmlContentDetail", b =>
                {
                    b.HasOne("ILG_Global.BussinessLogic.Models.HtmlContentMaster", "HtmlContentMaster")
                        .WithMany("HtmlContentDetails")
                        .HasForeignKey("HtmlContentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ILG_Global.BussinessLogic.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HtmlContentMaster");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.ImageDetail", b =>
                {
                    b.HasOne("ILG_Global.BussinessLogic.Models.ImageMaster", "ImageMaster")
                        .WithMany()
                        .HasForeignKey("ImageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ILG_Global.BussinessLogic.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImageMaster");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.ImageMaster", b =>
                {
                    b.HasOne("ILG_Global.BussinessLogic.Models.HtmlContentMaster", null)
                        .WithMany("ImageMasters")
                        .HasForeignKey("HtmlContentMasterID");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.OurServiceDetail", b =>
                {
                    b.HasOne("ILG_Global.BussinessLogic.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ILG_Global.BussinessLogic.Models.OurServiceMaster", "OurServiceMaster")
                        .WithMany("OurServiceDetails")
                        .HasForeignKey("OurServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("OurServiceMaster");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.SucessStoryDetail", b =>
                {
                    b.HasOne("ILG_Global.BussinessLogic.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ILG_Global.BussinessLogic.Models.SucessStoryMaster", "SucessStoryMaster")
                        .WithMany()
                        .HasForeignKey("SucessStoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SucessStoryMaster");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.HtmlContentMaster", b =>
                {
                    b.Navigation("HtmlContentDetails");

                    b.Navigation("ImageMasters");
                });

            modelBuilder.Entity("ILG_Global.BussinessLogic.Models.OurServiceMaster", b =>
                {
                    b.Navigation("OurServiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
